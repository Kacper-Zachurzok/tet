import { type NextPage } from "next";
import Link from "next/link";
import { useRouter } from "next/router";
import Head from "next/head";
import { type FormEventHandler, useState, useEffect } from "react";
import { useSession } from "next-auth/react";
import { useProducts } from "../hooks/useProducts";
import { Header } from "../components/header";
import { Products } from "../components/products";
import permissions, { hasPermissions } from "../utils/permissions";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();

  const { products, pages, removeProduct } = useProducts();

  const userPermissions = sessionData?.user?.permissions || 0;
  const canAdd = hasPermissions(userPermissions, permissions.AddProduct);

  return (
    <>
      <Head>
        <title>Tet: Explore board games</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gradient-to-br from-slate-900 to-slate-800 text-slate-400">
        <Header user={sessionData?.user} />
        <div className="m-3 my-6 flex">
          <Search />
          {canAdd && (
            <Link
              href="/create"
              className="ml-2 rounded-lg bg-blue-600 p-2 transition-colors duration-300 ease-in-out hover:bg-blue-700"
            >
              <svg className="mx-auto h-[1.5em] w-[2em] invert">
                <image href="/add.svg" className="h-[1.5em] w-[2em]" />
              </svg>
            </Link>
          )}
        </div>
        <div className="m-3 flex">
          <PageSelector pages={pages || 0} />
        </div>
        <div className="m-3 flex flex-1 flex-wrap content-start items-start justify-start gap-8">
          <Products
            products={products}
            permissions={sessionData?.user?.permissions}
            callbacks={{
              delete: removeProduct,
            }}
          />
        </div>
      </main>
    </>
  );
};

export default Home;

const Search: React.FC = () => {
  const router = useRouter();
  const [search, setSearch] = useState<string>("");

  const handleSubmit: FormEventHandler<HTMLFormElement> = async (e) => {
    e.preventDefault();
    router.push({
      query: {
        ...router.query,
        search,
      },
    });
  };

  useEffect(() => {
    let { search } = router.query;
    search = Array.isArray(search) ? search.shift() : search;
    if (search) setSearch(search);
  }, [router.query]);

  return (
    <form className="flex flex-1" onSubmit={handleSubmit}>
      <input
        placeholder="Search"
        value={search}
        onChange={(e) => setSearch(e.target.value)}
        className="outline-blue-60handleSubmit0 w-full rounded-l-lg border border-slate-400 p-2 text-black placeholder-slate-400 dark:border-gray-800 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400"
      />
      <button className="rounded-r-lg border-slate-400 bg-blue-600 p-3 font-semibold text-white transition-colors duration-300 ease-in-out hover:bg-blue-700 dark:border-gray-800">
        Search
      </button>
    </form>
  );
};

const PageSelector: React.FC<{ pages: number }> = ({ pages }) => {
  const router = useRouter();

  const [currentPage, setCurrentPage] = useState<number>(0);
  useEffect(() => {
    let { page: pageQuery } = router.query;
    pageQuery = Array.isArray(pageQuery) ? pageQuery.shift() : pageQuery;
    const currentPage = parseInt(pageQuery || "0");
    setCurrentPage(currentPage);
  }, [router.query]);

  const selectPage = async (page: number) => {
    router.push({
      query: {
        ...router.query,
        page,
      },
    });
  };

  const allPages: number[] = [];
  for (let i = 0; i < pages; i++) {
    allPages.push(i);
  }

  return (
    <div className="m-3 mx-auto">
      {allPages.map((page) => (
        <button
          key={page}
          onClick={() => selectPage(page)}
          className={`${
            page == currentPage
              ? "bg-yellow-600 hover:bg-yellow-600"
              : "bg-blue-600 hover:bg-blue-700"
          } mx-1 rounded-lg px-3 py-1 text-white transition-colors duration-300 ease-in-out`}
        >
          {page + 1}
        </button>
      ))}
    </div>
  );
};
