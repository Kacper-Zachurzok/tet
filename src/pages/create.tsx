import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";
import { Header } from "../components/header";
import ImageFallback from "../components/imageFallback";
import permissions, { hasPermissions } from "../utils/permissions";
import AddImage from "../components/games/AddImage";
import AddTitle from "../components/games/AddTitle";
import AddDescription from "../components/games/AddDescription";
import AddPlayers from "../components/games/AddPlayers";
import type {
  Product,
  ProductDescription,
  ProductImage,
  ProductPlayers,
  ProductTitle,
} from "../utils/schemas/product";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();
  const router = useRouter();

  const [title, setTitle] = useState<ProductTitle>("Title");
  const [description, setDescription] =
    useState<ProductDescription>("description");
  const [players, setPlayers] = useState<ProductPlayers>(1);
  const [image, setImage] = useState<ProductImage>("/404.jpg");

  const userPermissions = sessionData?.user?.permissions || 0;
  const canAdd = hasPermissions(userPermissions, permissions.AddProduct);

  const handleSubmit = async () => {
    const response = await fetch("/api/products/", {
      method: "POST",
      body: JSON.stringify({
        title,
        description,
        players,
        image,
      }),
      headers: {
        "Content-Type": "application/json",
      },
    });
    const product: Product = await response.json();
    if (response.ok) router.push(`/games/${product.slug}`);
  };

  return (
    <>
      <Head>
        <title>Tet: Explore board games</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gradient-to-br from-slate-900 to-slate-800 text-slate-400">
        <Header user={sessionData?.user} />
        <div className="mt-6 flex-col rounded-2xl bg-slate-100 text-black shadow-2xl dark:bg-gray-800 dark:text-white lg:mx-[20em]">
          <div className="relative h-[10em]">
            <ImageFallback
              src={image}
              className="absolute h-full w-full rounded-t-2xl object-cover"
            />
            <div className="absolute bottom-3 right-3">
              <AddImage show={canAdd} image={image} setImage={setImage} />
            </div>
          </div>
          <div className="px-3">
            <div className="pt-2">
              <span className="flex justify-between text-xl font-semibold">
                {title}
                <AddTitle show={canAdd} title={title} setTitle={setTitle} />
              </span>
              <div className="flex justify-between rounded-2xl py-2 text-xl font-semibold">
                <div>
                  <svg className="mr-2 inline h-[1.5em] w-[1.5em] dark:invert">
                    <image
                      href="/players.svg"
                      className="h-[1.5em] w-[1.5em]"
                    />
                  </svg>
                  {players}
                </div>
                <AddPlayers
                  show={canAdd}
                  players={players}
                  setPlayers={setPlayers}
                />
              </div>
            </div>
            <div className="mb-6 mt-3 flex flex-nowrap justify-between text-sm text-gray-600 dark:text-gray-300">
              <span>{description}</span>
              <AddDescription
                show={canAdd}
                description={description}
                setDescription={setDescription}
              />
            </div>
            <button
              onClick={handleSubmit}
              className="my-2 ml-auto block w-fit rounded-lg bg-blue-600 py-2 px-4 text-center font-semibold text-white transition-colors duration-300 ease-in-out hover:bg-blue-700"
            >
              Add
            </button>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
